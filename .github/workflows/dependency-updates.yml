name: Dependency Updates

on:
  schedule:
    # Run daily at 6 AM UTC
    - cron: '0 6 * * *'
  workflow_dispatch:

jobs:
  update-go-deps:
    name: Update Go Dependencies
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Bootstrap dependencies
      uses: ./.github/actions/bootstrap
      with:
        go-version: '1.24'

    - name: Update Go dependencies
      run: |
        go get -u ./...
        go mod tidy
        go mod download

    - name: Check for changes
      id: check-changes
      run: |
        if git diff --quiet; then
          echo "changes=false" >> $GITHUB_OUTPUT
        else
          echo "changes=true" >> $GITHUB_OUTPUT
        fi

    - name: Commit and push changes
      if: steps.check-changes.outputs.changes == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add go.mod go.sum
        git commit -m "chore: update Go dependencies

        - Update all Go dependencies to latest versions
        - Run go mod tidy"
        git push

    - name: Create PR if changes
      if: steps.check-changes.outputs.changes == 'true' && github.ref == 'refs/heads/main'
      uses: peter-evans/create-pull-request@v6
      with:
        title: "chore: Update Go dependencies"
        body: |
          This PR updates Go dependencies to their latest versions.
          
          ## Changes
          - Updated all Go dependencies using `go get -u ./...`
          - Ran `go mod tidy` to clean up dependencies
          
          ## Verification
          Please ensure that all tests pass and the builds are successful after merging this PR.
        branch: "deps/update-go-deps"
        delete-branch: true
        token: ${{ secrets.GITHUB_TOKEN }}

  check-security:
    name: Check Security Vulnerabilities
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Bootstrap dependencies
      uses: ./.github/actions/bootstrap
      with:
        go-version: '1.24'

    - name: Run govulncheck
      run: |
        go install golang.org/x/vuln/cmd/govulncheck@latest
        govulncheck ./... || echo "Vulnerabilities found - please review"

    - name: Create issue if vulnerabilities found
      if: failure()
      uses: actions/github-script@v7
      with:
        script: |
          const { data: issues } = await github.rest.issues.listForRepo({
            owner: context.repo.owner,
            repo: context.repo.repo,
            state: 'open',
            labels: 'security'
          });
          
          const existingIssue = issues.find(issue => 
            issue.title.includes('Security vulnerabilities detected')
          );
          
          if (!existingIssue) {
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'Security vulnerabilities detected in dependencies',
              body: `Security vulnerabilities were detected in the project dependencies by govulncheck.
              
              Please review the output above and update the affected dependencies.
              
              This issue was automatically created by the CI/CD pipeline.`,
              labels: ['security', 'dependencies', 'automated']
            });
          }
